###########################################################################
# Makefile for Spatium Gestu
# Author: J. Ian Lindsay
# Date:   2015.06.20
#
# Fubarino Mini target
###########################################################################
FIRMWARE_NAME  = spatiumgenstu

MCU            = 32MX250F128D
CPU_SPEED      = 48000000L
OPTIMIZATION   = -Os
C_STANDARD     = gnu99
CXX_STANDARD   = gnu++11

BOARD_DEF      = _BOARD_FUBARINO_MINI_


###########################################################################
# Environmental awareness...
###########################################################################
WHO_I_AM       = $(shell whoami)
HOME_DIRECTORY = /home/$(WHO_I_AM)
ARDUINO_PATH   = $(HOME_DIRECTORY)/arduino

export MPEIDE_PATH  = $(HOME_DIRECTORY)/.arduino15/packages/chipKIT
export BUILD_ROOT   = $(shell pwd)
export OUTPUT_PATH  = $(BUILD_ROOT)/build

TOOLCHAIN          = $(MPEIDE_PATH)/hardware/tools/pic32-tools/1.42-pic32gcc/pic32mx
FLASH_LOADER_PATH  = $(MPEIDE_PATH)/hardware/tools/pic32prog
FORMAT             = ihex
#PLATFORM_PATH  = $(MPEIDE_PATH)/hardware/pic32/

export CC      = $(TOOLCHAIN)/bin/gcc
export CXX     = $(TOOLCHAIN)/bin/g++
export AR      = $(TOOLCHAIN)/bin/ar
export AS      = $(TOOLCHAIN)/bin/as
export OBJCOPY = $(TOOLCHAIN)/bin/objcopy
export SZ      = $(TOOLCHAIN)/bin/size
export MAKE    = $(shell which make)


###########################################################################
# Includes, flags, and linker directives...
###########################################################################
CXXFLAGS    = -felide-constructors -fno-exceptions -fno-rtti
CFLAGS       = -Wall -nostdlib

LIBS       = -lm -lmanuvr -lextras

INCLUDES     = -iquote. -iquotesrc/
INCLUDES    += -I./ -Isrc/
INCLUDES    += -I$(ARDUINO_PATH)/libraries
INCLUDES    += -I$(PLATFORM_PATH)/cores/pic32
INCLUDES    += -I$(PLATFORM_PATH)/libraries/Wire/utility/
INCLUDES    += -I$(PLATFORM_PATH)/variants/Fubarino_Mini/


LD_FILE     = $(PLATFORM_PATH)/cores/pic32/chipKIT-application-32MX250F128.ld


# Wrap the include paths into the flags...

CFLAGS += -DF_CPU=$(CPU_SPEED)
CFLAGS += -D$(BOARD_DEF)
CFLAGS += -mprocessor=$(MCU) -D__PIC32MX2XX__

CFLAGS += -mno-smart-io -ffunction-sections -fdata-sections
CFLAGS += -G1024 -fno-short-double # -Wcast-align

CFLAGS += -DMPIDEVER=16777998 -DMPIDE=23 -DARDUINO=23 -D_USE_USB_FOR_SERIAL_

CFLAGS += -DMANUVR_CONSOLE_SUPPORT



###########################################################################
# Source file definitions...
###########################################################################
SOURCES_CPP  = src/SpatiumGestu.cpp


###########################################################################
# Option conditionals
###########################################################################
MANUVR_OPTIONS += -DMANUVR_CONSOLE_SUPPORT
#MANUVR_OPTIONS += -DMANUVR_STORAGE
#MANUVR_OPTIONS += -DMANUVR_CBOR
MANUVR_OPTIONS += -DMANUVR_SUPPORT_I2C

# Options for various security features.
ifeq ($(SECURE),1)
MANUVR_OPTIONS += -DWITH_BLIND_CRYPTO
export SECURE=1
endif

# Debugging options...
ifeq ($(DEBUG),1)
MANUVR_OPTIONS += -D__MANUVR_DEBUG
MANUVR_OPTIONS += -D__MANUVR_EVENT_PROFILER
endif


###########################################################################
# exports, consolidation....
###########################################################################
OBJS  = $(SOURCES_C:.c=.o) $(SOURCES_CPP:.cpp=.o)

# Merge our choices and export them to the downstream Makefiles...
CFLAGS += $(MANUVR_OPTIONS) $(OPTIMIZATION) $(INCLUDES)

export MANUVR_PLATFORM = FUBARINO
export CFLAGS
export CXXFLAGS += $(CFLAGS)


###########################################################################
# Rules for building the firmware follow...
###########################################################################

.PHONY: lib $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf

all: lib $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf

%.o : %.cpp
	$(CXX) -std=$(CXX_STANDARD) $(CXXFLAGS) -c -o $@ $^

%.o : %.c
	$(CXX) -std=$(CXX_STANDARD) $(CXXFLAGS) -c -o $@ $^

lib: $(OBJS)
	mkdir -p $(OUTPUT_PATH)
	$(MAKE) -C lib

$(OUTPUT_PATH)/$(FIRMWARE_NAME).elf:
	$(CPP_CROSS) -c $(CXXFLAGS) $(SRCS)
	$(AR_CROSS) rvs $(OUTPUT_PATH)/core.a *.o
	$(CPP_CROSS)  -Os  -Wl,--gc-sections  -mdebugger  -mno-peripheral-libs  -nostartfiles  -mprocessor=32MX250F128D -o $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf $(OUTPUT_PATH)/core.a -L. $(LIBS) -T $(LD_FILE) -T$(PLATFORM_PATH)/cores/pic32/chipKIT-application-COMMON.ld

	@echo
	@echo $(MSG_FLASH) $@
	$(OBJCOPY) -O $(FORMAT) -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0 $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf $(OUTPUT_PATH)/$(FIRMWARE_NAME).eep
	$(BIN2HEX_CROSS) -a $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf


program: $(OUTPUT_PATH)/$(FIRMWARE_NAME).elf
	$(LOADER_PATH) -p$(MCU) -P/dev/ttyACM1 -C$(MPEIDE_PATH)/hardware/tools/avrdude.conf -cstk500v2 -v -b115200 -D -Uflash:w:$(OUTPUT_PATH)/$(FIRMWARE_NAME).hex:i

clean:
	rm -f *.d *.o *.su *~ $(OBJS)

fullclean: clean
	rm -rf $(OUTPUT_PATH)
	$(MAKE) clean -C lib
